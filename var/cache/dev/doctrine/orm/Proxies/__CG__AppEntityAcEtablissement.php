<?php

namespace Proxies\__CG__\App\Entity;


/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class AcEtablissement extends \App\Entity\AcEtablissement implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array<string, null> properties to be lazy loaded, indexed by property name
     */
    public static $lazyPropertiesNames = array (
);

    /**
     * @var array<string, mixed> default values of properties to be lazy loaded, with keys being the property names
     *
     * @see \Doctrine\Common\Proxy\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array (
);



    public function __construct(?\Closure $initializer = null, ?\Closure $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'App\\Entity\\AcEtablissement' . "\0" . 'id', '' . "\0" . 'App\\Entity\\AcEtablissement' . "\0" . 'user_created', '' . "\0" . 'App\\Entity\\AcEtablissement' . "\0" . 'user_updated', '' . "\0" . 'App\\Entity\\AcEtablissement' . "\0" . 'code', '' . "\0" . 'App\\Entity\\AcEtablissement' . "\0" . 'designation', '' . "\0" . 'App\\Entity\\AcEtablissement' . "\0" . 'abreviation', '' . "\0" . 'App\\Entity\\AcEtablissement' . "\0" . 'statut', '' . "\0" . 'App\\Entity\\AcEtablissement' . "\0" . 'doyen', '' . "\0" . 'App\\Entity\\AcEtablissement' . "\0" . 'nature', '' . "\0" . 'App\\Entity\\AcEtablissement' . "\0" . 'date', '' . "\0" . 'App\\Entity\\AcEtablissement' . "\0" . 'active', '' . "\0" . 'App\\Entity\\AcEtablissement' . "\0" . 'rapport', '' . "\0" . 'App\\Entity\\AcEtablissement' . "\0" . 'rapport_ordre', '' . "\0" . 'App\\Entity\\AcEtablissement' . "\0" . 'created', '' . "\0" . 'App\\Entity\\AcEtablissement' . "\0" . 'updated', '' . "\0" . 'App\\Entity\\AcEtablissement' . "\0" . 'acFormations', '' . "\0" . 'App\\Entity\\AcEtablissement' . "\0" . 'acDepartements', '' . "\0" . 'App\\Entity\\AcEtablissement' . "\0" . 'bordereaux', '' . "\0" . 'App\\Entity\\AcEtablissement' . "\0" . 'designationEn', '' . "\0" . 'App\\Entity\\AcEtablissement' . "\0" . 'statutEn', '' . "\0" . 'App\\Entity\\AcEtablissement' . "\0" . 'assiduite', '' . "\0" . 'App\\Entity\\AcEtablissement' . "\0" . 'site', '' . "\0" . 'App\\Entity\\AcEtablissement' . "\0" . 'formation'];
        }

        return ['__isInitialized__', '' . "\0" . 'App\\Entity\\AcEtablissement' . "\0" . 'id', '' . "\0" . 'App\\Entity\\AcEtablissement' . "\0" . 'user_created', '' . "\0" . 'App\\Entity\\AcEtablissement' . "\0" . 'user_updated', '' . "\0" . 'App\\Entity\\AcEtablissement' . "\0" . 'code', '' . "\0" . 'App\\Entity\\AcEtablissement' . "\0" . 'designation', '' . "\0" . 'App\\Entity\\AcEtablissement' . "\0" . 'abreviation', '' . "\0" . 'App\\Entity\\AcEtablissement' . "\0" . 'statut', '' . "\0" . 'App\\Entity\\AcEtablissement' . "\0" . 'doyen', '' . "\0" . 'App\\Entity\\AcEtablissement' . "\0" . 'nature', '' . "\0" . 'App\\Entity\\AcEtablissement' . "\0" . 'date', '' . "\0" . 'App\\Entity\\AcEtablissement' . "\0" . 'active', '' . "\0" . 'App\\Entity\\AcEtablissement' . "\0" . 'rapport', '' . "\0" . 'App\\Entity\\AcEtablissement' . "\0" . 'rapport_ordre', '' . "\0" . 'App\\Entity\\AcEtablissement' . "\0" . 'created', '' . "\0" . 'App\\Entity\\AcEtablissement' . "\0" . 'updated', '' . "\0" . 'App\\Entity\\AcEtablissement' . "\0" . 'acFormations', '' . "\0" . 'App\\Entity\\AcEtablissement' . "\0" . 'acDepartements', '' . "\0" . 'App\\Entity\\AcEtablissement' . "\0" . 'bordereaux', '' . "\0" . 'App\\Entity\\AcEtablissement' . "\0" . 'designationEn', '' . "\0" . 'App\\Entity\\AcEtablissement' . "\0" . 'statutEn', '' . "\0" . 'App\\Entity\\AcEtablissement' . "\0" . 'assiduite', '' . "\0" . 'App\\Entity\\AcEtablissement' . "\0" . 'site', '' . "\0" . 'App\\Entity\\AcEtablissement' . "\0" . 'formation'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (AcEtablissement $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy::$lazyPropertiesDefaults as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load(): void
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized(): bool
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized): void
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(?\Closure $initializer = null): void
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer(): ?\Closure
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(?\Closure $cloner = null): void
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner(): ?\Closure
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @deprecated no longer in use - generated code now relies on internal components rather than generated public API
     * @static
     */
    public function __getLazyProperties(): array
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId(): ?int
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getUserCreated(): ?\App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUserCreated', []);

        return parent::getUserCreated();
    }

    /**
     * {@inheritDoc}
     */
    public function setUserCreated(?\App\Entity\User $user_created): \App\Entity\AcEtablissement
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUserCreated', [$user_created]);

        return parent::setUserCreated($user_created);
    }

    /**
     * {@inheritDoc}
     */
    public function getUserUpdated(): ?\App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUserUpdated', []);

        return parent::getUserUpdated();
    }

    /**
     * {@inheritDoc}
     */
    public function setUserUpdated(?\App\Entity\User $user_updated): \App\Entity\AcEtablissement
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUserUpdated', [$user_updated]);

        return parent::setUserUpdated($user_updated);
    }

    /**
     * {@inheritDoc}
     */
    public function getCode(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCode', []);

        return parent::getCode();
    }

    /**
     * {@inheritDoc}
     */
    public function setCode(?string $code): \App\Entity\AcEtablissement
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCode', [$code]);

        return parent::setCode($code);
    }

    /**
     * {@inheritDoc}
     */
    public function getDesignation(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDesignation', []);

        return parent::getDesignation();
    }

    /**
     * {@inheritDoc}
     */
    public function setDesignation(?string $designation): \App\Entity\AcEtablissement
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDesignation', [$designation]);

        return parent::setDesignation($designation);
    }

    /**
     * {@inheritDoc}
     */
    public function getAbreviation(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAbreviation', []);

        return parent::getAbreviation();
    }

    /**
     * {@inheritDoc}
     */
    public function setAbreviation(?string $abreviation): \App\Entity\AcEtablissement
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAbreviation', [$abreviation]);

        return parent::setAbreviation($abreviation);
    }

    /**
     * {@inheritDoc}
     */
    public function getStatut(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStatut', []);

        return parent::getStatut();
    }

    /**
     * {@inheritDoc}
     */
    public function setStatut(?string $statut): \App\Entity\AcEtablissement
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStatut', [$statut]);

        return parent::setStatut($statut);
    }

    /**
     * {@inheritDoc}
     */
    public function getDoyen(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDoyen', []);

        return parent::getDoyen();
    }

    /**
     * {@inheritDoc}
     */
    public function setDoyen(?string $doyen): \App\Entity\AcEtablissement
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDoyen', [$doyen]);

        return parent::setDoyen($doyen);
    }

    /**
     * {@inheritDoc}
     */
    public function getNature(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNature', []);

        return parent::getNature();
    }

    /**
     * {@inheritDoc}
     */
    public function setNature(?string $nature): \App\Entity\AcEtablissement
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNature', [$nature]);

        return parent::setNature($nature);
    }

    /**
     * {@inheritDoc}
     */
    public function getDate(): ?\DateTimeInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDate', []);

        return parent::getDate();
    }

    /**
     * {@inheritDoc}
     */
    public function setDate(?\DateTimeInterface $date): \App\Entity\AcEtablissement
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDate', [$date]);

        return parent::setDate($date);
    }

    /**
     * {@inheritDoc}
     */
    public function getActive(): ?int
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getActive', []);

        return parent::getActive();
    }

    /**
     * {@inheritDoc}
     */
    public function setActive(?int $active): \App\Entity\AcEtablissement
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setActive', [$active]);

        return parent::setActive($active);
    }

    /**
     * {@inheritDoc}
     */
    public function getRapport(): ?int
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRapport', []);

        return parent::getRapport();
    }

    /**
     * {@inheritDoc}
     */
    public function setRapport(?int $rapport): \App\Entity\AcEtablissement
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRapport', [$rapport]);

        return parent::setRapport($rapport);
    }

    /**
     * {@inheritDoc}
     */
    public function getRapportOrdre(): ?int
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRapportOrdre', []);

        return parent::getRapportOrdre();
    }

    /**
     * {@inheritDoc}
     */
    public function setRapportOrdre(?int $rapport_ordre): \App\Entity\AcEtablissement
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRapportOrdre', [$rapport_ordre]);

        return parent::setRapportOrdre($rapport_ordre);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreated(): ?\DateTimeInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreated', []);

        return parent::getCreated();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreated(?\DateTimeInterface $created): \App\Entity\AcEtablissement
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreated', [$created]);

        return parent::setCreated($created);
    }

    /**
     * {@inheritDoc}
     */
    public function getUpdated(): ?\DateTimeInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUpdated', []);

        return parent::getUpdated();
    }

    /**
     * {@inheritDoc}
     */
    public function setUpdated(?\DateTimeInterface $updated): \App\Entity\AcEtablissement
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUpdated', [$updated]);

        return parent::setUpdated($updated);
    }

    /**
     * {@inheritDoc}
     */
    public function getAcFormations(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAcFormations', []);

        return parent::getAcFormations();
    }

    /**
     * {@inheritDoc}
     */
    public function addAcFormation(\App\Entity\AcFormation $acFormation): \App\Entity\AcEtablissement
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addAcFormation', [$acFormation]);

        return parent::addAcFormation($acFormation);
    }

    /**
     * {@inheritDoc}
     */
    public function removeAcFormation(\App\Entity\AcFormation $acFormation): \App\Entity\AcEtablissement
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeAcFormation', [$acFormation]);

        return parent::removeAcFormation($acFormation);
    }

    /**
     * {@inheritDoc}
     */
    public function getAcDepartements(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAcDepartements', []);

        return parent::getAcDepartements();
    }

    /**
     * {@inheritDoc}
     */
    public function addAcDepartement(\App\Entity\AcDepartement $acDepartement): \App\Entity\AcEtablissement
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addAcDepartement', [$acDepartement]);

        return parent::addAcDepartement($acDepartement);
    }

    /**
     * {@inheritDoc}
     */
    public function removeAcDepartement(\App\Entity\AcDepartement $acDepartement): \App\Entity\AcEtablissement
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeAcDepartement', [$acDepartement]);

        return parent::removeAcDepartement($acDepartement);
    }

    /**
     * {@inheritDoc}
     */
    public function getBordereaux(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBordereaux', []);

        return parent::getBordereaux();
    }

    /**
     * {@inheritDoc}
     */
    public function addBordereaux(\App\Entity\TBrdpaiement $bordereaux): \App\Entity\AcEtablissement
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addBordereaux', [$bordereaux]);

        return parent::addBordereaux($bordereaux);
    }

    /**
     * {@inheritDoc}
     */
    public function removeBordereaux(\App\Entity\TBrdpaiement $bordereaux): \App\Entity\AcEtablissement
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeBordereaux', [$bordereaux]);

        return parent::removeBordereaux($bordereaux);
    }

    /**
     * {@inheritDoc}
     */
    public function getDesignationEn(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDesignationEn', []);

        return parent::getDesignationEn();
    }

    /**
     * {@inheritDoc}
     */
    public function setDesignationEn(?string $designationEn): \App\Entity\AcEtablissement
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDesignationEn', [$designationEn]);

        return parent::setDesignationEn($designationEn);
    }

    /**
     * {@inheritDoc}
     */
    public function getStatutEn(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStatutEn', []);

        return parent::getStatutEn();
    }

    /**
     * {@inheritDoc}
     */
    public function setStatutEn(?string $statutEn): \App\Entity\AcEtablissement
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStatutEn', [$statutEn]);

        return parent::setStatutEn($statutEn);
    }

    /**
     * {@inheritDoc}
     */
    public function getAssiduite(): ?int
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAssiduite', []);

        return parent::getAssiduite();
    }

    /**
     * {@inheritDoc}
     */
    public function setAssiduite(int $assiduite): \App\Entity\AcEtablissement
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAssiduite', [$assiduite]);

        return parent::setAssiduite($assiduite);
    }

    /**
     * {@inheritDoc}
     */
    public function getSite(): ?int
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSite', []);

        return parent::getSite();
    }

    /**
     * {@inheritDoc}
     */
    public function setSite(?int $site): \App\Entity\AcEtablissement
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSite', [$site]);

        return parent::setSite($site);
    }

    /**
     * {@inheritDoc}
     */
    public function getFormation(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFormation', []);

        return parent::getFormation();
    }

    /**
     * {@inheritDoc}
     */
    public function addFormation(\App\Entity\AcFormation $formation): \App\Entity\AcEtablissement
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addFormation', [$formation]);

        return parent::addFormation($formation);
    }

    /**
     * {@inheritDoc}
     */
    public function removeFormation(\App\Entity\AcFormation $formation): \App\Entity\AcEtablissement
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeFormation', [$formation]);

        return parent::removeFormation($formation);
    }

}
